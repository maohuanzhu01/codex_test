version: '3.9'
services:
  db:
    image: ankane/pgvector:latest
    environment:
      POSTGRES_DB: legal_ai
      POSTGRES_USER: legal_ai
      POSTGRES_PASSWORD: legal_ai
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "legal_ai"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
  backend:
    build:
      context: .
      dockerfile: Dockerfile.back
    env_file:
      - backend/.env
    environment:
      - DATABASE_URL=postgresql://legal_ai:legal_ai@db:5432/legal_ai
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz/"]
      interval: 10s
      timeout: 5s
      retries: 5
  celery:
    build:
      context: .
      dockerfile: Dockerfile.back
    command: poetry run celery -A legal_ai worker
    env_file:
      - backend/.env
    environment:
      - DATABASE_URL=postgresql://legal_ai:legal_ai@db:5432/legal_ai
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.front
    depends_on:
      - backend
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend
